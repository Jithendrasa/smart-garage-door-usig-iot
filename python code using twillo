# import necessary modules
import conf
import json
import time
from boltiot import Bolt, Sms

# create Bolt and SMS instances
mybolt = Bolt(conf.API_KEY, conf.DEVICE_ID)
sms = Sms(conf.SID, conf.AUTH_TOKEN, conf.TO_NUMBER, conf.FROM_NUMBER)

# variable to save previous state information initialized to 0
old_state = 0

while True:
    print("Reading value from Bolt")
    response = mybolt.digitalRead('1')
    data = json.loads(response)
    print(data)
    new_state = int(data['value'])  # retrieve new_state from the data

    if old_state != new_state:  # checking for change in state
        # Change in state indicates that the garage door is opened or closed
        try:
            if new_state == 1:  # value of new_state is 1 implies that garage door is open
                print("Making request to Twilio to send SMS")  # sending an SMS to the TO NUMBER
                response = sms.send_sms("Garage is open")
                print("Response received from Twilio is:", response)
                print("Status of SMS at Twilio is:", response.status)

            elif new_state == 0:  # value of new_state is 0 implies that garage door is closed
                print("Making request to Twilio to send SMS")  # sending an SMS to the TO NUMBER
                response = sms.send_sms("Garage is closed")
                print("Response received from Twilio is:", response)
                print("Status of SMS at Twilio is:", response.status)

        except Exception as e:
            print("Error occurred: Below are the details")
            print(e)

    old_state = new_state  # assign new_state value to the old_state for the next cycle
    time.sleep(20)  # wait for 20 seconds
